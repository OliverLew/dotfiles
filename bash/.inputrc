# use vi mode
set editing-mode vi
$if mode=vi
set keymap vi-command
# these are for vi-command mode
Control-l: clear-screen
set keymap vi-insert
# these are for vi-insert mode
Control-l: clear-screen 
$endif

# Make Tab autocomplete regardless of filename case
set completion-ignore-case on

# Show extra file information when completing, like `ls -F` does
set visible-stats on

# kill the lag, do not wait after ESC
set keyseq-timeout 0

# Be more intelligent when autocompleting by also looking at the text after
# the cursor. For example, when the current line is "cd ~/src/mozil", and
# the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# Readline used by Bash 4.)
set skip-completed-text on

# Completion like zsh
# If there are multiple matches for completion,
# make TAB cycle through them and shift TAB backwards.
TAB: menu-complete
"\e[Z": menu-complete-backward
# Display a list of the matching files
set show-all-if-ambiguous on
# Perform partial completion on the first Tab press, and
# only start cycling full results on the second Tab press.
set menu-complete-display-prefix on

# show mode indicators
set show-mode-in-prompt on
set vi-ins-mode-string "\1\e[1;34m\2(ins)\1\e[0m\2 "
set vi-cmd-mode-string "\1\e[1;31m\2(cmd)\1\e[0m\2 "
#set vi-cmd-mode-string "\1\e[1;48;5;246;38;5;237m\2 CMD \1\e[0m\2"
#set vi-ins-mode-string "\1\e[1;48;5;109;38;5;237m\2 INS \1\e[0m\2"

#!/bin/sh

FIFO="/tmp/udev-local.fifo"
UDEV_LOCAL_LOG="/tmp/udev-local.log"

# send signals with arguments, only use this in udev rules
if [ $# -ge 1 ]; then
    # $UID can't give the user id, why?
    if [ "$(id -u)" -ne 0 ]; then
        echo "$*" > $FIFO
    else
        # find the user in the current console
        xtty="$(cat /sys/class/tty/tty0/active)"
        xuser="$(who | grep "${xtty}" | head -n 1 | cut -d' ' -f1)"
        # direct echoing with root won't work
        [ -n "${xuser}" ] && /bin/su - "${xuser}" -c "echo \"$*\" > $FIFO"
    fi
    exit
fi # other wise, monitor fifo output and respond

if [ ! -p $FIFO ]; then
    rm -f $FIFO && mkfifo $FIFO || exit 1
fi

trap "exec 3>&- && rm -f $FIFO" EXIT QUIT INT TERM

while read -r t p; do
    echo "debug: $t" >> $UDEV_LOCAL_LOG
    case "$t" in
        capslock)
            notify-send -a "New keyboard" "Mapping CapsLock -> Escape."
            sleep 1 # xmodmap won't work on new keyboards without this delay
            /usr/bin/xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape Caps_Lock'
            ;;
        ac)
            [ "$p" = 1 ] && notify-send -a "Power supply" "AC adapter plugged in"
            [ "$p" = 0 ] && notify-send -a "Power supply" "AC adapter unplugged"
            ;;
        drm)
            notify-send -a "Display" "External monitor changed"
            sh -c "$(which setmonitor)"
            ;;
        *)
            ;;
    esac
done < $FIFO &
exec 3> $FIFO
wait

#!/bin/sh
# TODO: grab header with
# curl "imaps://imap.qq.com:993/JUNK" --user "user:pass" -X "FETCH 3 (BODY[HEADER.FIELDS (DATE FROM SUBJECT)])" -v
# echo UmU6IOeglOeptueUn+WvkuWBh+aUvuWBh+WPiuWuieWFqOaPkOmGkg== | base64 -d
# echo 中 | iconv -f utf-8 -t gbk
# echo 中 | iconv -f utf-8 -t gbk | iconv -t utf-8 -f gbk

usage()
{
    echo "Usage: $(basename "$0") [-s server] [-p port] [-P password] [-h] email"
    echo
    echo "Server information:"
    echo "    -s: server address of email provider"
    echo "    -p: imap port"
    echo "Note:"
    echo "    The script has a few pre-configured server-port status for auto-detection."
    echo "    The server options can be omitted for these email providers:"
    echo "        gmail, outlook, qqmail"
    echo
    echo "Password:"
    echo "    -P: imap password"
    echo "Note:"
    echo "    This script by default looks for email password with the command:"
    echo "        pass mail/<email>"
}

# Get the server and port if provided
while getopts hs:p:P: param; do
    case "$param" in
        s) _server="$OPTARG";;
        p) _port="$OPTARG";;
        P) _password="$OPTARG";;
        h|*) usage; exit;;
    esac
done
shift $((OPTIND - 1))

# Get the email
if [ $# = 1 ]; then
    email=$1
else
    echo Only one email address as positional argument. See "$(basename "$0")" -h for help.
    exit 1
fi

# Some predefined server and ports
case "${email#*@}" in
    outlook.com)
        server=imap-mail.outlook.com
        port=993
        ;;
    qq.com)
        server=imap.qq.com
        port=993
        ;;
    gmail)
        server=imap.gmail.com
        port=993
        ;;
    *)
        ;;
esac

if [ -n "$_server" ]; then
    server="$_server"
fi
if [ -n "$_port" ]; then
    port="$_port"
fi

if [ -z "$server" ] || [ -z "$port" ]; then
    echo Server or port not set. >&2
    exit 1
fi

password=$(pass show mail/"$email" 2> /dev/null)

if [ -n "$_password" ]; then
    password="$_password"
fi

if [ -z "$password" ]; then
    echo Password not set. >&2
    exit 1
fi

# Minimal time interval between two imap queries
query_interval=120

time_now="$(date +%s)"
tempfile="/tmp/imap_$email"
if [ ! -f "$tempfile" ]
then
    flag_update=1
else
    read -r time_last count < "$tempfile"
    if [ $((time_now - time_last)) -gt "$query_interval" ]
    then
        flag_update=1
    elif [ -z "$count" ]; then
        flag_update=1
    fi
fi

if [ "$flag_update" = 1 ]
then
    count=$(curl -fsm 30 --connect-timeout 30 \
         --url "imaps://$server:$port" \
         --user "$email:$password" \
         --request "STATUS Inbox (UNSEEN)" \
         | grep -oE "[0-9]*")
    printf "%s " "$time_now" > "$tempfile"
    echo "$count" >> "$tempfile"
fi

echo "$count"

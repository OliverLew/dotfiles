#!/bin/bash
# A script to play video with framebuffer using mplayer, and put it on the position
# of current tmux pane.
# TODO: mplayer font display issue
# TODO: use another method to deal with blinking cursor

# Character with and height (you might need to modify this)
charw=10
charh=20

usage="usage: $(basename "$0") video [video ...]"

if [ $# = 0 ]
then
    echo "$usage"
    exit
fi

# Calculate position and available size
if tmux display -p -F "#S" > /dev/null 2>&1
then
    pane_id=$(tmux display -p -F "#D" | tr -d %)
    # This outputs the "layout" of all the panes and then
    # locates the current pane with its pane id and then
    # gets its location and size (in characters).
    # The format is <width>x<height>,<x>,<y>,<id>|{<recursive format>}|[<recursive format>].
    # We only need the ones with ids, which means they don't have further structures.
    read -r w h x y < <(tmux display -p -F "#{window_visible_layout}" \
        | grep -oE "[0-9]+x[0-9]+,[0-9]+,[0-9]+,[0-9]+" \
        | awk -F'[x,]' '{ if($5 == '"$pane_id"') print $1, $2, $3, $4 }')
    W=$((w * charw))
    H=$((h * charh))
    X=$((x * charw))
    Y=$((y * charh))
else
    # Use framebuffer size if not in tmux
    X=0
    Y=0
    read -r W H < <(fbset | awk '/geometry/{ print $2, $3 }')
fi

# Play each of the videos seperately (due to different video sizes)
for video in "$@"
do
    # Get the real size of the video
    read -r width height sar_x sar_y < \
    <(ffprobe "$video" \
              -v error \
              -select_streams v:0 \
              -show_entries stream=width,height,sample_aspect_ratio \
              -of csv=s=x:p=0 |
    awk -F'[x:]' '{ print $1, $2, $3, $4 }')

    # Calculate the actual video dimension on screen that could fit in the pane
    vH="$H"
    vW="$W"
    if [ $((width * H - height * W)) -gt 0 ]
    then
        vH=$((height * W / width))
    else
        vW=$((width * H / height))
    fi

    # fix the aspect ratio, sar might be absent in some videos
    if [ "$sar_x" != "N/A" ] && [ -n "$sar_x" ] || [ -n "$sar_y" ]
    then
        vW=$((vW * sar_x / sar_y))
    fi

    # Hide the cursor in case it blinks in the video region
    # This went bad if force stop the script :)
    tput civis
    # Play the video
    clear
    mplayer "$video" -really-quiet \
            -vo fbdev2 \
            -vf scale=$vW:$vH \
            -geometry $X:$Y
    clear
    # Show the cursor
    tput cnorm
done

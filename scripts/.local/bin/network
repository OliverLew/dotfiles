#!/bin/sh
# Script to show status, name and speed of network interfaces

# TODO: provide an option that if neither -e nor -w is provided, print all names or speeds. (but at the same time there must be one of -n and -s)
usage() {
    printf "%s [-i interface] [-e/w] [-n/s]\n\n" "$(basename "$0")"
    printf "Devices:\n"
    printf "\t-e: show stats about all ethernet devices\n"
    printf "\t-w: show stats about all wireless devices\n"
    printf "\t-i <interface>: show stats about <interface>\n"
    printf "Output:\n"
    printf "\t-n: show device names\n"
    printf "\t-s: show device RX/TX (a.k.a. DL/UL) speed\n"
    printf "\tNo arguments: print device status, 1 for up, 0 for down\n"
}

if [ "$#" = 0 ]; then usage; exit; fi
while getopts "i:webnsh" arg; do
    case "$arg" in
        i) interface="$OPTARG";;
        w) flag_wireless=1;;
        e) flag_ethernet=1;;
        n) flag_name=1;;
        s) flag_speed=1;;
        *) usage; exit;;
    esac
done
shift "$((OPTIND - 1))"
if [ "$#" != 0 ]; then usage; exit 1; fi

folder="/sys/class/net"

if [ -n "$interface" ]; then
    devices="$folder/$interface"
elif [ "$flag_ethernet" = 1 ]; then
    devices=$(find "$folder" -name "e*")
elif [ "$flag_wireless" = 1 ]; then
    devices=$(find "$folder" -name "w*")
fi

for device in $devices; do
    if [ "$flag_name" = 1 ]; then
        basename "$device"
    fi
    if [ "$flag_speed" = 1 ]; then
        tmpfile=/tmp/$(basename "$device")_old
        timens=$(date +"%s%N")
        if [ -f "$tmpfile" ]; then
            read -r timens_old rx_bytes_old tx_bytes_old < "$tmpfile"
            time_span_ns=$((timens - timens_old))
            # TODO: fix the dirty code below
            # TODO: store two sets of data
            if [ "$time_span_ns" -gt 10000000000 ]; then
                timens_old=$(date +"%s%N")
                read -r rx_bytes_old < "$device"/statistics/rx_bytes
                read -r tx_bytes_old < "$device"/statistics/tx_bytes
                sleep 3
                timens=$(date +"%s%N")
                time_span_ns=$((timens - timens_old))
            fi
            read -r rx_bytes < "$device"/statistics/rx_bytes
            read -r tx_bytes < "$device"/statistics/tx_bytes
            recieve_total=$((rx_bytes - rx_bytes_old))
            transmission_total=$((tx_bytes - tx_bytes_old))
            echo $((recieve_total * 1000000000 / time_span_ns))
            echo $((transmission_total * 1000000000 / time_span_ns))
        else
            echo -
        fi
        # avoid frequent write
        if [ ! -f "$tmpfile" ] || [ "$time_span_ns" -gt 1000000000 ]; then
            echo "$timens $rx_bytes $tx_bytes" > "$tmpfile"
        fi
    fi
    if [ -z "$flag_name" ] && [ -z "$flag_speed" ]; then
        read -r state < "$device"/operstate
        if [ "$state" = "up" ]; then
            echo 1
        elif [ "$state" = "down" ]; then
            echo 0
        else
            echo -
        fi
    fi
done

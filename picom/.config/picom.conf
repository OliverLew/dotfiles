log-level = "warn";

# Backend to use: "xrender" or "glx".
backend = "glx";
glx-no-stencil = true;
glx-no-rebind-pixmap = true;
# Set to false to get rid of artifacts
use-damage = false;

#################################
# Shadows
#################################

# Enabled client-side shadows on windows.
shadow = true;
shadow-radius = 32;
shadow-offset-x = -32;
shadow-offset-y = -32;
shadow-opacity = 0.2;

# The shadow exclude options are helpful if you have shadows enabled. Due to the way compton draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [
    "! name~=''",
    "name = 'Notification'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'compton'",
    "name *= 'picom'",
    "class_g = 'Firefox' && argb",
    "class_g = 'slop'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = true;

#################################
#
# Opacity
#
#################################

active-opacity = 0.90;
inactive-opacity = 0.90;
frame-opacity = 1.0;
inactive-opacity-override = false;

opacity-rule = [
    "100:class_g = 'VirtualBox Machine'",
    "100:class_g = 'mpv'",
    "100:_NET_WM_STATE@:32a = '_NET_WM_STATE_FULLSCREEN'",
];

# !! blur seem to create graphics artifacts on screen (traces of shades?), disabling
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
blur-background = true;
#blur-method = "kawase";
#blur-strength = 10;
blur-kern = "11x11gaussian";
# Blur background of opaque windows with transparent frames as well.
blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = false;
blur-background-exclude = [
    "class_g = 'slop'",  # screenshot
    "window_type = 'dock'",
    "window_type = 'desktop'"
];

#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
fade-delta = 8;
fade-in-step = 0.04;
fade-out-step = 0.04;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [
    "_NET_WM_WINDOW_TYPE@:a *= 'MENU'",
];

#################################
#
# Other
#
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Enable. this became a boolean value since compton 6.0
vsync = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = true;

####################
# General Settings #
####################

# prefix key(s)
set -g prefix C-a

# 256 colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",screen-256color:Tc"

# mouse support
set -g mouse on

# set key mode to vi
set -g mode-keys vi

# history
set -g history-limit 30000

# start numbering windows from 1 instead of zero
set -g base-index 1
# re-number windows when one is closed
set -g renumber-windows on

# time to wait for ESC key
set -g escape-time 0
# display pane numbers
set -g display-panes-time 3000
# wait for repeat longer
set -g repeat-time 800
# update interval
set -g status-interval 3

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off


###############
# Keybindings #
###############

# key mapping to reload config file
bind r source-file ~/.tmux.conf

# copy to system clipboard
#bind -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection
#bind -T copy-mode-vi MouseDown3Pane send-keys -X cancel
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'xclip -in -selection clipboard'
#bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard'

# open panes in the current directory
# vertically (up and down)
bind v   split-window -c "#{pane_current_path}"
bind -   split-window -c "#{pane_current_path}"
# horizontally (left and right)
bind h   split-window -c "#{pane_current_path}" -h
bind |   split-window -c "#{pane_current_path}" -h

bind c   new-window   -c "#{pane_current_path}"

# bind vim-like key mapping to move between panes and windows
bind -r C-k select-pane -U
bind -r C-j select-pane -D
bind -r C-h select-pane -L
bind -r C-l select-pane -R
bind -r C-n next-window
bind -r C-p previous-window

# some other key bindings from tmux-pain-control plugin
bind -r < swap-window -t -1
bind -r > swap-window -t +1

# resize panes
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r H resize-pane -L 4
bind -r L resize-pane -R 4

# adjust brightness and volumn (useful in VT)
bind -r C-d run-shell -b "light -U 5"\; refresh-client
bind -r C-e run-shell -b "light -A 5"\; refresh-client
bind -r C-s run-shell -b "amixer -q set Master 5%-"\; refresh-client
bind -r C-w run-shell -b "amixer -q set Master 5%+"\; refresh-client

# Enable screen-like C-a C-a moving to last window
bind C-a last-window
bind C-b set-option status


##############
# Status bar #
##############

# set the style
set -g status-style bg=colour0
set -g message-command-style fg=colour222,bg=colour238
set -g message-style bg=colour238
set -g pane-border-style fg=colour3,bg=colour0
set -g pane-active-border-style fg=colour4,bg=colour0

# powerline statusline
set -g status-left-length 30
set -g status-left "#[fg=#{?client_prefix,colour1,colour51},bg=colour0,bold] #S "

set -g status-right-length 80
set -g status-right "\
#[fg=colour121,bg=colour0] %a %b %d, %R \
#[fg=colour27, bg=colour0]/ Vol: #(amixer sget Master | grep -E 'Right:|Left:' | awk -F'[][]' '{ print $2, $4 }' | sort -rn | head -1) \
#[fg=colour11, bg=colour0]/ Lum: #(printf "%.0f" `light`)% \
#[fg=colour154,bg=colour0]/ Bat:#(acpi -b | cut -d','  -f 2) "

setw -g window-status-format "#[fg=colour7,bg=colour0] #I#{?#F,#F, } #W "
setw -g window-status-current-format "#[fg=colour190,bg=colour0] #I#F #W "
setw -g window-status-activity-style fg=colour7,bg=colour0

set -g status-position "bottom"
set -g status-justify "centre"

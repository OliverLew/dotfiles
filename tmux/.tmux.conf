# 256 colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",screen-256color:Tc"
# mouse support
set -g mouse on
# start numbering windows from 1 instead of zero
set -g base-index 1
# history
set -g history-limit 30000
# time to wait for ESC key
set -g escape-time 0
# put status line at top
set -g status-position top
# set key mode to vi
set -g mode-keys vi
# re-number windows when one is closed
set -g renumber-windows on
# set the style
set -g status-style bg=black
set -g message-command-style fg=colour222,bg=colour238
set -g message-style bg=colour238
set -g pane-border-style bg=black,fg=brightblack
set -g pane-active-border-style bg=black,fg=brightgreen
# key mapping to reload config file
bind r source-file ~/.tmux.conf
# copy to system clipboard
bind -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection
bind -T copy-mode-vi MouseDown3Pane send-keys -X cancel
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'xclip -in -selection clipboard'
bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard'
# open panes in the current directory
bind '"' split-window -c "#{pane_current_path}"
bind %   split-window -c "#{pane_current_path}" -h
bind c   new-window   -c "#{pane_current_path}"
# bind vim-like key mapping to move between panes
bind-key -r -T prefix C-k select-pane -U
bind-key -r -T prefix C-j select-pane -D
bind-key -r -T prefix C-h select-pane -L
bind-key -r -T prefix C-l select-pane -R
bind-key -r -T prefix C-n next-window
bind-key -r -T prefix C-p previous-window
# some other key bindings from tmux-pain-control plugin
bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1
pane_resize="4"
bind-key -r -T prefix H resize-pane -L "$pane_resize"
bind-key -r -T prefix J resize-pane -D "$pane_resize"
bind-key -r -T prefix K resize-pane -U "$pane_resize"
bind-key -r -T prefix L resize-pane -R "$pane_resize"
# adjust brightness and volumn (useful in VT)
bind-key -r -T root C-F9 run-shell -b "light -U 5"
bind-key -r -T root C-F10 run-shell -b "light -A 5"
bind-key -r -T root C-F7 run-shell -b "amixer set Master 5%- > /dev/null"
bind-key -r -T root C-F8 run-shell -b "amixer set Master 5%+ > /dev/null"
# Enable screen-like C-a C-a moving to last window
bind-key C-b last-window

# powerline statusline
set -g status-left-length 80
set -g status-left '\
#[fg=colour232,bg=colour154] #S \
#[fg=colour154,bg=colour238]\
#[fg=colour222,bg=colour238] #W \
#[fg=colour238,bg=black    ]'

set -g status-right-length 80
set -g status-right "\
#[fg=black,    bg=black    ]\
#[fg=colour121,bg=black    ] %a %b %d, %R \
#[fg=colour238,bg=black    ]\
#[fg=colour222,bg=colour238] #H \
#[fg=brightblue,bg=colour238]\
#[fg=black,bg=brightblue] #(amixer sget Master | grep -E 'Right:|Left:' | awk -F'[][]' '{ print $2 }' | sort -rn | head -1) \
#[fg=brightyellow,bg=brightblue]\
#[fg=black,bg=brightyellow] #(printf "%.0f" `light`)% \
#[fg=colour154,bg=brightyellow]\
#[fg=colour232,bg=colour154] #(upower -i `upower -e | grep BAT` | grep percentage | awk '{ print $2 }') \
"

setw -g window-status-format '\
#[fg=black,bg=black]\
#[fg=default,bg=black] #I #W \
#[fg=black,bg=black]'

setw -g window-status-current-format '\
#[fg=black,bg=colour238]\
#[fg=colour222,bg=colour238] #I#F #W \
#[fg=colour238,bg=black]'

set-option -g status-justify "centre"
